import smtplib
from email.message import EmailMessage
from celery import Celery
from src.config import SMTP_PASSWORD, SMTP_USER, REDIS_PORT, REDIS_HOST
from src.transaction.models import TransactionType

SMTP_HOST = "smtp.gmail.com"
SMTP_PORT = 465

celery = Celery('tasks', broker=f'redis://{REDIS_HOST}:{REDIS_PORT}')


def get_email_template_report(order_id: int, wallet_id: int, stock: str, amount: int, type: TransactionType):
    email = EmailMessage()
    email['Subject'] = f'Bybit. Order #{order_id} was successfully executed'
    email['From'] = SMTP_USER
    email['To'] = SMTP_USER

    email.set_content(
        '<div>'
        f'<h1 style="color: blue;">–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –∞ –≤–æ—Ç –∏ –≤–∞—à –æ—Ç—á–µ—Ç. –ó–∞—Ü–µ–Ω–∏—Ç–µ üòä</h1>'
        f'<p>–í–∞—à –æ—Ä–¥–µ—Ä –Ω–∞ {amount} –∞–∫—Ü–∏–π "{stock}" –±—ã–ª —É—Å–ø–µ—à–Ω–æ –∏—Å–ø–æ–ª–Ω–µ–Ω.</p>'
        f'<p><strong>–î–µ—Ç–∞–ª–∏ –æ—Ä–¥–µ—Ä–∞:</strong></p>'
        f'<ul>'
        f'<li>ID –æ—Ä–¥–µ—Ä–∞: {order_id}</li>'
        f'<li>ID –∫–æ—à–µ–ª—å–∫–∞: {wallet_id}</li>'
        f'<li>–¢–∏–ø —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {type}</li>'
        f'</ul>'
        '<img src="https://seeklogo.com/images/B/bybit-logo-4C31FD6A08-seeklogo.com.png" width="150" alt="Bybit Logo">'
        '</div>',
        subtype='html'
    )
    return email


@celery.task
def send_email_order_report(order_id: int, wallet_id: int, stock: str, amount: int, type: TransactionType):
    email = get_email_template_report(order_id, wallet_id, stock, amount, type)
    with smtplib.SMTP_SSL(SMTP_HOST, SMTP_PORT) as server:
        server.login(SMTP_USER, SMTP_PASSWORD)
        server.send_message(email)